generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id String @id() @default(uuid())

  tittle      String
  description String?
  releaseYear Int     @map("release_year")
  rating      Float   @default(0.0)
  isAvailable Boolean @default(false) @map("is_available")
  genre       Genre   @default(ACTION)

  posterId String?  @unique @map("poster_id")
  poster   Poster?  @relation(fields: [posterId], references: [id], onDelete: Cascade)
  actors   Actor[]  @relation("movie_actors")
  reviews  Review[] @relation("movie_reviews")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("movies")
}

model Review {
  id String @id() @default(uuid())

  text   String
  rating Decimal @default(0.0)

  movie   Movie  @relation("movie_reviews", fields: [movieId], references: [id], onDelete: Cascade)
  movieId String @map("movie_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("reviews")
}

model Actor {
  id String @id() @default(uuid())

  name   String
  movies Movie[] @relation("movie_actors")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("actors")
}

model Poster {
  id String @id() @default(uuid())

  url String

  movie Movie? @relation

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("posters")
}

enum Genre {
  ACTION
  COMEDY
  DRAMA
  HORROR

  @@map("enum_genres")
}
